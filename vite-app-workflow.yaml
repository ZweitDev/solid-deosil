# vite-app-workflow.yaml
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: vite-app-ci-cd
spec:
  entrypoint: main-pipeline
  arguments:
    parameters:
    - name: image-tag
      value: "latest"
    - name: git-repo
      value: "https://github.com/your-username/your-vite-repo.git"
    - name: git-branch
      value: "main"
  
  templates:
    - name: main-pipeline
      steps:
      - - name: checkout-code
          template: git-checkout
      - - name: build-test
          template: build-test-app
      - - name: build-image
          template: build-docker-image
          arguments:
            parameters:
            - name: image-tag
              value: "{{workflow.parameters.image-tag}}"
      - - name: push-image
          template: push-docker-image
          arguments:
            parameters:
            - name: image-tag
              value: "{{workflow.parameters.image-tag}}"
      - - name: update-manifests
          template: update-k8s-manifests
          arguments:
            parameters:
            - name: image-tag
              value: "{{workflow.parameters.image-tag}}"
      - - name: sync-argocd
          template: trigger-argocd-sync

    - name: git-checkout
      container:
        image: alpine/git
        command: [sh, -c]
        args: ["git clone {{workflow.parameters.git-repo}} -b {{workflow.parameters.git-branch}} /src && cd /src && git rev-parse HEAD > /tmp/commit.txt"]
        volumeMounts:
        - name: workspace
          mountPath: /src
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: workspace
        emptyDir: {}
      - name: tmp
        emptyDir: {}

    - name: build-test-app
      container:
        image: node:18
        workingDir: /src
        command: [sh, -c]
        args: ["npm install && npm run build && npm test"]
        volumeMounts:
        - name: workspace
          mountPath: /src

    - name: build-docker-image
      inputs:
        parameters:
        - name: image-tag
      container:
        image: docker:20.10
        workingDir: /src
        command: [sh, -c]
        args: ["docker build -t your-registry/vite-app:{{inputs.parameters.image-tag}} ."]
        volumeMounts:
        - name: workspace
          mountPath: /src
        - name: docker-sock
          mountPath: /var/run/docker.sock
      volumes:
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock

    - name: push-docker-image
      inputs:
        parameters:
        - name: image-tag
      container:
        image: docker:20.10
        command: [sh, -c]
        args: ["docker login -u $DOCKER_USER -p $DOCKER_PASSWORD && docker push your-registry/vite-app:{{inputs.parameters.image-tag}}"]
        env:
        - name: DOCKER_USER
          valueFrom:
            secretKeyRef:
              name: docker-credentials
              key: username
        - name: DOCKER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: docker-credentials
              key: password
        volumeMounts:
        - name: docker-sock
          mountPath: /var/run/docker.sock

    - name: update-k8s-manifests
      inputs:
        parameters:
        - name: image-tag
      container:
        image: alpine/k8s:1.25
        workingDir: /src
        command: [sh, -c]
        args: ["sed -i 's|your-registry/vite-app:.*|your-registry/vite-app:{{inputs.parameters.image-tag}}|' k8s-manifests/deployment.yaml && git config --global user.email \"argo@workflow\" && git config --global user.name \"Argo Workflow\" && git add k8s-manifests/deployment.yaml && git commit -m \"Update image tag to {{inputs.parameters.image-tag}}\" && git push"]
        volumeMounts:
        - name: workspace
          mountPath: /src
        env:
        - name: GIT_TOKEN
          valueFrom:
            secretKeyRef:
              name: git-credentials
              key: token

    - name: trigger-argocd-sync
      container:
        image: curlimages/curl
        command: [sh, -c]
        args: ["curl -X POST -H \"Authorization: Bearer $ARGO_TOKEN\" https://argocd.your-domain.com/api/v1/applications/vite-app/sync"]
        env:
        - name: ARGO_TOKEN
          valueFrom:
            secretKeyRef:
              name: argocd-credentials
              key: token
