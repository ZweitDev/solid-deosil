apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
    generateName: solid-deosil-ci-cd-
    namespace: argo
spec:
    serviceAccountName: workflow-executor
    entrypoint: main-pipeline
    volumes:
        - name: workspace
          emptyDir: {}
        - name: docker-sock
          hostPath:
              path: /var/run/docker.sock

    arguments:
        parameters:
            - name: image-tag
              value: "latest"
            - name: git-repo
              value: "https://github.com/ZweitDev/solid-deosil.git"
            - name: git-branch
              value: "main"

    templates:
        - name: main-pipeline
          steps:
              - - name: checkout-code
                  template: git-checkout
              - - name: build-test
                  template: build-test-app
              - - name: build-image
                  template: build-docker-image
                  arguments:
                      parameters:
                          - name: image-tag
                            value: "{{workflow.parameters.image-tag}}"
              - - name: push-image
                  template: push-docker-image
                  arguments:
                      parameters:
                          - name: image-tag
                            value: "{{workflow.parameters.image-tag}}"
              - - name: update-manifests
                  template: update-k8s-manifests
                  arguments:
                      parameters:
                          - name: image-tag
                            value: "{{workflow.parameters.image-tag}}"
              - - name: sync-argocd
                  template: trigger-argocd-sync

        - name: git-checkout
          container:
              image: alpine/git
              command: [sh, -c]
              args:
                  [
                      "git clone {{workflow.parameters.git-repo}} -b {{workflow.parameters.git-branch}} /src && cd /src && ls -la",
                  ]
              volumeMounts:
                  - name: workspace
                    mountPath: /src

        - name: build-test-app
          container:
              image: node:18
              workingDir: /src
              command: [sh, -c]
              args: ["ls -la && npm install && npm run build && npm test"]
              volumeMounts:
                  - name: workspace
                    mountPath: /src

        # ... rest of your templates remain the same ...
