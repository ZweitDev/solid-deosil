apiVersion: argoproj.io/v1alpha
kind: Workflow
metadata:
    generateName: solid-deosil-ci-cd-
    namespace: argo
spec:
    serviceAccountName: workflow-executor
    entrypoint: main-pipeline
    volumeClaimTemplates:
        - metadata:
              name: workdir
          spec:
              accessModes: ["ReadWriteOnce"]
              resources:
                  requests:
                      storage: 1Gi
    volumes:
        - name: argocd-token
          secret:
              secretName: argocd-api-token
        - name: docker-sock
          hostPath:
              path: /var/run/docker.sock

    arguments:
        parameters:
            - name: image-tag
              value: "latest"
            - name: git-repo
              value: "https://github.com/ZweitDev/solid-deosil.git"
            - name: git-branch
              value: "main"

    templates:
        - name: main-pipeline
          steps:
              - - name: checkout-code
                  template: git-checkout
              - - name: verify-files
                  template: verify-files
              - - name: build-image
                  template: build-docker-image
                  arguments:
                      parameters:
                          - name: image-tag
                            value: "{{workflow.parameters.image-tag}}"
              - - name: push-image
                  template: push-docker-image
                  arguments:
                      parameters:
                          - name: image-tag
                            value: "{{workflow.parameters.image-tag}}"
              - - name: argo-sync
                  template: argocd-sync

        - name: git-checkout
          container:
              image: alpine/git
              volumeMounts:
                  - name: workdir
                    mountPath: /src # ‚Üê Must be consistent
              command: [sh, -c]
              args: [
                      "mkdir -p /src &&
                      cd /src &&
                      git clone {{workflow.parameters.git-repo}} . || true &&
                      git checkout {{workflow.parameters.git-branch}} &&
                      ls -la", # Verify
                  ]

        - name: verify-files
          container:
              image: alpine
              command: [sh, -c]
              args: ["ls -la /src"]
              volumeMounts:
                  - name: workdir
                    mountPath: /src

        - name: build-docker-image
          inputs:
              parameters:
                  - name: image-tag
          container:
              image: docker:20.10
              workingDir: /src
              command: [sh, -c]
              args:
                  [
                      "ls -la && docker build -t registry.minikube/solid-deosil:{{inputs.parameters.image-tag}} .",
                  ]
              volumeMounts:
                  - name: workdir
                    mountPath: /src
                  - name: docker-sock
                    mountPath: /var/run/docker.sock

        - name: push-docker-image
          inputs:
              parameters:
                  - name: image-tag
          container:
              image: docker:20.10
              command: [sh, -c]
              args:
                  [
                      "docker push registry.minikube/solid-deosil:{{inputs.parameters.image-tag}}",
                  ]
              volumeMounts:
                  - name: docker-sock
                    mountPath: /var/run/docker.sock

        - name: argocd-sync
          container:
              image: curlimages/curl
              command: [sh, -c]
              args: [
                      "curl -X POST -H 'Authorization: Bearer $ARGO_TOKEN'
                      http://argocd-server.argocd.svc.cluster.local/api/v1/applications/solid-deosil/sync",
                  ]
              env:
                  - name: ARGO_TOKEN
                    valueFrom:
                        secretKeyRef:
                            name: argocd-api-token
                            key: token
              volumeMounts:
                  - name: argocd-token
                    mountPath: /var/run/secrets/argocd
                    readOnly: true
